// <auto-generated />
using ElectricGamesApiV1.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectricGamesApiV1.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20221124220541_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("ElectricGamesApiV1.Models.Consoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConsoleImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ConsoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ConsolePrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Consoles");
                });

            modelBuilder.Entity("ElectricGamesApiV1.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameGenre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GameImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GamePlatform")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GamePrice")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameReleaseYear")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("ElectricGamesApiV1.Models.GameCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterAge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CharacterGame")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CharacterImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameCharacters");
                });

            modelBuilder.Entity("ElectricGamesApiV1.Models.QuizMultipleChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnswerFour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AnswerOne")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AnswerThree")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AnswerTwo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("QuizMultipleChoice");
                });
#pragma warning restore 612, 618
        }
    }
}
